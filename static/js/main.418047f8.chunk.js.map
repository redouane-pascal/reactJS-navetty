{"version":3,"sources":["Switch.js","TrainLine.js","index.js"],"names":["Switch","isFromCP","onChange","className","type","checked","href","diffFromNow","myHour","m","parseInt","replace","d","Date","getHours","getMinutes","getMinNumLigne","lines","numTrainMin","lineID","length","Horaire","props","id","cfIndex","cfClignote","style","cfStyle","haIndex","haStyle","haValue","TitreGare","gareId","titreGareCssClass","titreGare","BandeInfo","message","now","Train","idNumTrain","title","numTrainCssStyle","numTrain","TrainLine","state","listGare","data","KToCp","this","interval","setInterval","setState","time","clearInterval","event","console","log","reverse","CpToK","body","th","i","cssClass","push","renderTitreGare","key","line","mycfStyle","backgroundColor","myHaStyle","j","tr","indiceHoraire","horaireArriveeGare","horaireDepartGare","mycfCssClass","color","display","renderHoraire","String","fromCharCode","today","trains","cssTop","cssLeft","cssWidth","size","horaires","slice","index","horaireDebut","horaireFin","isDisplay","gareDepartNonTrouve","gareEnCoursNonTrouve","indexGareDepart","trainMultiple","left","width","top","minutes","renderTrain","renderBandeInfo","marginBottom","position","zIndex","renderTrainLine","handleChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.418047f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/style.css';\r\n\r\nconst Switch = ({ isFromCP, onChange}) => {\r\n  return (\r\n    <div className=\"divBottom\">\r\n    <div className=\"spanFrom1\">From CASA PORT</div>\r\n    <label className=\"switch\">\r\n        <input\r\n            type=\"checkbox\"\r\n            checked={isFromCP}\r\n            onChange={onChange}\r\n        />\r\n        <span />\r\n    </label>\r\n    <div className=\"spanFrom2\">From KENITRA</div>\r\n    <div className=\"aboutMe\">\r\n        <span className=\"madeBy\">Made by\r\n            <a href=\"https://www.linkedin.com/in/radwanbasqual/\" className=\"authorName\">Radwan BASQUAL</a>_2018\r\n        </span>\r\n    </div>\r\n</div>\r\n  );\r\n};\r\n\r\n\r\nexport default Switch;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/style.css';\r\nimport CpToK from './data/lignes_fromCPtoK.json'\r\nimport KToCp from './data/lignes_fromKtoCP.json'\r\nimport Switch from \"./Switch\";\r\n\r\nfunction diffFromNow(myHour) {\r\n    var m = parseInt(myHour.replace(\":\", \"\"));\r\n    var d = new Date();\r\n    var n = 100 * d.getHours() + d.getMinutes();\r\n    return m - n;\r\n}\r\n\r\nfunction getMinNumLigne(lines) {\r\n    let numTrainMin = 0;\r\n    for (let lineID = 0; lineID < lines.length; lineID++) {\r\n        if ((lines[lineID][20] != null) && (diffFromNow(lines[lineID][20]) > 0)) {\r\n            if (lineID > 1) {\r\n                numTrainMin = lineID - 1;\r\n            } else {\r\n                numTrainMin = lineID;\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return numTrainMin;\r\n}\r\n\r\nfunction Horaire(props) {\r\n    return (\r\n        <td className=\"tdCssClass\">\r\n            <div id={props.cfIndex} className={props.cfClignote} style={props.cfStyle}>\r\n                <span id={props.haIndex} className=\"nomGare horaire\" style={props.haStyle}>{props.haValue}</span>\r\n            </div>\r\n        </td>\r\n    )\r\n}\r\n\r\nfunction TitreGare(props) {\r\n    return (\r\n        <th id={props.gareId} className={props.titreGareCssClass}>{props.titreGare}</th>\r\n    )\r\n}\r\n\r\nfunction BandeInfo(props) {\r\n    return (\r\n        <div id=\"band_up\" className=\"divInfo\">\r\n            <div id=\"info\">\r\n                <span className=\"spanInfo\">\r\n                    <span>{props.message}</span> - <span>{props.now}</span>\r\n                </span>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction Train(props) {\r\n    return (\r\n        <div>\r\n            <div id={props.id}\r\n                style={props.style}\r\n                className=\"train\">\r\n            </div>\r\n            <div id={props.idNumTrain}\r\n                className=\"numTrain\"\r\n                title=\"N° du train\"\r\n                style={props.numTrainCssStyle}>\r\n                {props.numTrain}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass TrainLine extends React.Component {\r\n\r\n    // componentDidMount() {\r\n    //     setInterval(() => window.location.reload(), 5000);\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.setState({ time: Date.now() }), 5000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listGare: [\"KÉNITRA\", \"SALÉ TABRIQUET\", \"SALÉ VILLE\", \"RABAT VILLE\",\r\n                \"RABAT AGDAL\", \"TEMARA\", \"SKHIRATE\", \"BOUZNIKA\",\r\n                \"MOHAMMEDIA\", \"AIN SEBAA\", \"CASA PORT\"],\r\n            isFromCP: true,\r\n            data: KToCp,\r\n        };\r\n    }\r\n\r\n    handleChange(event) {\r\n        console.log(\"handleChange passed !!\")\r\n        if (this.state.isFromCP) {\r\n            this.setState({\r\n                listGare: this.state.listGare.reverse(),\r\n                isFromCP: !this.state.isFromCP,\r\n                data: CpToK,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                listGare: this.state.listGare.reverse(),\r\n                isFromCP: !this.state.isFromCP,\r\n                data: KToCp,\r\n            })\r\n        }\r\n    }\r\n\r\n    renderTrainLine() {\r\n        let body = [];\r\n\r\n        let th = [];\r\n        for (let i = 0; i < 11; i++) {\r\n            let cssClass = \"titreGare titreGareOdd\";\r\n            if (i % 2 === 0) cssClass = \"titreGare titreGareEven\";\r\n            th.push(this.renderTitreGare(i, \"th\" + i, cssClass, this.state.listGare[i]));\r\n        }\r\n        body.push(<thead key={2019}><tr key={2018}>{th}</tr></thead>);\r\n\r\n        let line = [];\r\n        let mycfStyle = {\r\n            backgroundColor: \"gray\",\r\n        }\r\n        let myHaStyle = {}\r\n\r\n        let numTrainMin = getMinNumLigne(this.state.data.lines);\r\n\r\n        for (let j = numTrainMin; j < this.state.data.lines.length; j++) {\r\n            let tr = [];\r\n            for (let i = 0; i < 11; i++) {\r\n                let indiceHoraire = i == 0 ? 1 : 2 * i;\r\n                let horaireArriveeGare = this.state.data.lines[j][indiceHoraire];\r\n                let horaireDepartGare = horaireArriveeGare;\r\n                if ((i < 10) && (i > 0)) {\r\n                    horaireDepartGare = this.state.data.lines[j][indiceHoraire + 1];\r\n                }\r\n                let mycfCssClass = \"circle_front \";\r\n\r\n                if( (horaireDepartGare != null) && (horaireArriveeGare == null) ){\r\n                    // Gare de Depart\r\n                    if (diffFromNow(horaireDepartGare) < 0) {\r\n                        // Le train est deja parti de la gare\r\n                        mycfStyle = {\r\n                            backgroundColor: \"gray\",\r\n                        }\r\n                        myHaStyle = {\r\n                            color: \"lightgrey\",\r\n                        }\r\n                        horaireArriveeGare = horaireDepartGare;\r\n                    }else if (diffFromNow(horaireDepartGare) < 1) {\r\n                        // Le train est en arret a la gare\r\n                        mycfCssClass = mycfCssClass + \"clignote \"\r\n                        mycfStyle = {}\r\n                        myHaStyle = {}\r\n                        horaireArriveeGare = horaireDepartGare;\r\n                    }else{\r\n                        // Le train n'a pas encore passe par la gare\r\n                        mycfStyle = {}\r\n                        myHaStyle = {}\r\n                    }\r\n                } else if (horaireDepartGare == null) {\r\n                    // Le train ne feras pas de depart de la gare\r\n                    mycfStyle = {\r\n                        display: \"none\",\r\n                    }\r\n                } else if (horaireArriveeGare == null) {\r\n                    // Le train ne s'arretera pas a la gare\r\n                    mycfStyle = {\r\n                        display: \"none\",\r\n                    }\r\n                } else if (diffFromNow(horaireDepartGare) < 0) {\r\n                    // Le train est deja parti de la gare\r\n                    mycfStyle = {\r\n                        backgroundColor: \"gray\",\r\n                    }\r\n                    myHaStyle = {\r\n                        color: \"lightgrey\",\r\n                    }\r\n                    horaireArriveeGare = horaireDepartGare;\r\n                } else if ((diffFromNow(horaireArriveeGare) <= 0) && (diffFromNow(horaireDepartGare) >= 0)) {\r\n                    // Le train est en arret a la gare\r\n                    mycfCssClass = mycfCssClass + \"clignote \"\r\n                    mycfStyle = {}\r\n                    myHaStyle = {}\r\n                    horaireArriveeGare = horaireDepartGare;\r\n                } else {\r\n                    // Le train n'a pas encore passe par la gare\r\n                    mycfStyle = {}\r\n                    myHaStyle = {}\r\n                }\r\n                tr.push(this.renderHoraire(\"cf\" + String.fromCharCode(80 + j) + i, mycfCssClass, mycfStyle, \"ha\" + String.fromCharCode(80 + j) + i, myHaStyle, horaireArriveeGare));\r\n            }\r\n            line.push(<tr key={2020 + j}>{tr}</tr>);\r\n        }\r\n        body.push(<tbody key={2021}>{line}</tbody>);\r\n\r\n        return body;\r\n    }\r\n\r\n    renderTrain() {\r\n        var today = new Date();\r\n        let now = 100 * today.getHours() + today.getMinutes();\r\n\r\n        let trains = [];\r\n\r\n        let numTrainMin = getMinNumLigne(this.state.data.lines);\r\n\r\n        for (let i = numTrainMin; i < this.state.data.lines.length; i++) {\r\n            let id = \"train\" + i;\r\n            let cssTop = 74 + 35.2 * (i - numTrainMin);\r\n            let cssLeft;\r\n            let cssWidth = 9.1;\r\n\r\n            let size = this.state.data.lines[i].length;\r\n\r\n            let horaires = this.state.data.lines[i].slice(0, size);\r\n\r\n            for (let index = 2; index < size; index++) {\r\n                if (horaires[index] == null) {\r\n                    horaires[index] = horaires[index - 1];\r\n                }\r\n            }\r\n            for (let index = size - 1; index > 0; index--) {\r\n                if (horaires[index] == null) {\r\n                    horaires[index] = horaires[index + 1];\r\n                }\r\n            }\r\n\r\n            let horaireDebut = parseInt(horaires[1].replace(\":\", \"\"));\r\n            let horaireFin = parseInt(horaires[size - 1].replace(\":\", \"\"));\r\n\r\n            let isDisplay = false;\r\n            if ((horaireDebut < now) && (now < horaireFin)) {\r\n                isDisplay = true;\r\n            }\r\n\r\n            if (isDisplay) {\r\n\r\n                let d = size - 1;\r\n                let gareDepartNonTrouve = true;\r\n                let gareEnCoursNonTrouve = true;\r\n                let indexGareDepart = 0;\r\n                while ((gareDepartNonTrouve) && (gareEnCoursNonTrouve) && (d > 0)) {\r\n                    if (parseInt(horaires[d].replace(\":\", \"\")) < now) {\r\n                        gareDepartNonTrouve = false;\r\n                    } else if (parseInt(horaires[d].replace(\":\", \"\")) == now) {\r\n                        gareEnCoursNonTrouve = false;\r\n                    } else {\r\n                        d--;\r\n                    }\r\n                }\r\n                // Cas ou le train ne passe pas par toutes les gares\r\n                let trainMultiple = 1;\r\n                if (!gareDepartNonTrouve) {\r\n                    while ((horaires[d] == horaires[d - 1]) && (d > 0)) {\r\n                        trainMultiple = trainMultiple + 0.5;\r\n                        d--;\r\n                    }\r\n                    indexGareDepart = d;\r\n                }\r\n                if (!gareEnCoursNonTrouve) {\r\n                    isDisplay = false;\r\n                }\r\n\r\n                if (indexGareDepart % 2 == 0) indexGareDepart++;\r\n                cssLeft = 9.1 * (indexGareDepart / 2);\r\n                cssWidth = cssWidth * trainMultiple;\r\n            }\r\n\r\n            let style = {\r\n                display: isDisplay ? \"block\" : \"none\",\r\n                left: cssLeft + \"%\",\r\n                width: cssWidth + \"%\",\r\n                top: cssTop + \"px\",\r\n            }\r\n\r\n            let idNumTrain = \"numTrain_\" + id;\r\n            let numTrainCssStyle = {\r\n                top: (cssTop - 16) + \"px\",\r\n            }\r\n            let numTrain = horaires[0].replace(\"L\", \"\");\r\n\r\n            trains.push(<Train key={i}\r\n                id={id}\r\n                style={style}\r\n                idNumTrain={idNumTrain}\r\n                numTrainCssStyle={numTrainCssStyle}\r\n                numTrain={numTrain}\r\n            />)\r\n        }\r\n        return trains;\r\n    }\r\n\r\n    renderBandeInfo(message, now) {\r\n        return (\r\n            <BandeInfo\r\n                message={message}\r\n                now={now}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderTitreGare(i, gareId, titreGareCssClass, titreGare) {\r\n        return (\r\n            <TitreGare key={i}\r\n                gareId={gareId}\r\n                titreGareCssClass={titreGareCssClass}\r\n                titreGare={titreGare}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderHoraire(i, cfClignote, cfStyle, haIndex, haStyle, haValue) {\r\n        return (\r\n            <Horaire key={i}\r\n                cfIndex={i}\r\n                cfClignote={cfClignote}\r\n                cfStyle={cfStyle}\r\n                haIndex={haIndex}\r\n                haStyle={haStyle}\r\n                haValue={haValue}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        const tableStyle = {\r\n            marginBottom: \"0px\",\r\n            position: \"relative\",\r\n            zIndex: \"3\",\r\n        }\r\n        let today = new Date();\r\n        let minutes = today.getMinutes() < 10 ? \"0\" + today.getMinutes() : today.getMinutes();\r\n        let now = today.getHours() + \":\" + minutes;\r\n        let message = \"Données valables depuis 01 Jan. 2020\";\r\n\r\n        return (\r\n            <div>\r\n                {this.renderTrain()}\r\n                {this.renderBandeInfo(message, now)}\r\n                <table id=\"grille\"\r\n                    className=\"table table-borderless\"\r\n                    style={tableStyle}>\r\n                    {this.renderTrainLine()}\r\n                </table>\r\n                <Switch\r\n                    isFromCP={this.state.isFromCP}\r\n                    onChange={(event) => this.handleChange(event)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default TrainLine\r\n","import React from 'react';\nimport ReactDOM from 'react-dom'\n// import './index.css'\n// import App from './App'\nimport TrainLine from './TrainLine'\n\n\n// ReactDOM.render(<App/>, document.getElementById('root'));\nReactDOM.render(<TrainLine/>, document.getElementById('root'));\n\n// import Users from './routers/users'\n// import Contact from './routers/contact'\n// import Notfound from './routers/notfound'\n// import * as serviceWorker from './serviceWorker';\n\n// const routing = (\n//     <Router>\n//         <div>\n//             <ul>\n//                 <li>\n//                     <Link to=\"/\">Home</Link>\n//                 </li>\n//                 <li>\n//                     <Link to=\"/users\">Users</Link>\n//                 </li>\n//                 <li>\n//                     <Link to=\"/contact\">Contact</Link>\n//                 </li>\n//             </ul>\n//             <Route exact path=\"/\" component={App} />\n//             <Route path=\"/users/:id\" component={Users} />\n//             <Route path=\"/contact\" component={Contact} />\n//             <Route component={Notfound} />\n//         </div>\n//     </Router>\n// )\n\n// ReactDOM.render(routing, document.getElementById('root'));\n\n\n// setTimeout(() => {\n//     ReactDOM.unmountComponentAtNode(document.getElementById('root'));}, 10000);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}